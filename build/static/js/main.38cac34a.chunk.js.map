{"version":3,"sources":["firebase.js","components/TutorialHeader/TutorialHeader.js","components/TutorialHeader/index.js","content/LandingPage/index.js","content/LandingPage/LandingPage.js","content/EntriesPage/index.js","content/EntriesPage/EntriesPage.js","content/QuestionsPage/index.js","content/QuestionsPage/QuestionsPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","analytics","UserIconStyled","styledComponents","img","TutorialHeader","user","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","HeaderMenuItem","href","HeaderGlobalBar","HeaderGlobalAction","photoURL","src","width","alt","LandingPage","currentUser","console","log","displayName","EntriesPage","userEmail","email","admin","useCollectionData","collection","idField","where","rows","DataTable","headers","key","header","getTableProps","getHeaderProps","getRowProps","Table","TableHead","TableRow","map","TableHeader","TableBody","row","cells","cell","TableCell","value","id","QuestionsPage","useState","answer1","setAnswer1","answer2","setAnswer2","answer3","setAnswer3","Form","onSubmit","e","preventDefault","add","then","docRef","catch","error","TextArea","labelText","placeholder","onChange","target","invalidText","Button","type","StyledFooter","footer","firebaseAppAuth","providers","googleProvider","GoogleAuthProvider","microsoftProvider","OAuthProvider","micosoftLogin","signInWithPopup","result","credential","accessToken","idToken","App","this","props","signOut","signInWithGoogle","Content","exact","path","component","kind","Component","withFirebaseAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.38cac34a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n});\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\nconst analytics = firebase.analytics();\r\n\r\nexport { db, auth, analytics };\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Header,\r\n  HeaderContainer,\r\n  HeaderName,\r\n  HeaderNavigation,\r\n  HeaderMenuButton,\r\n  HeaderMenuItem,\r\n  HeaderGlobalBar,\r\n  HeaderGlobalAction,\r\n  SkipToContent,\r\n  SideNav,\r\n  SideNavItems,\r\n  HeaderSideNavItems,\r\n} from 'carbon-components-react';\r\nimport { UserAvatar20 } from '@carbon/icons-react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styledComponents from 'styled-components';\r\n\r\nconst UserIconStyled = styledComponents.img`\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst TutorialHeader = ({ user }) => (\r\n  <HeaderContainer\r\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\r\n      <>\r\n        <Header aria-label=\"Carbon Tutorial\">\r\n          <SkipToContent />\r\n          <HeaderMenuButton\r\n            aria-label=\"Open menu\"\r\n            onClick={onClickSideNavExpand}\r\n            isActive={isSideNavExpanded}\r\n          />\r\n          <HeaderName element={Link} to=\"/\" prefix=\"Intern Diary\" />\r\n          <HeaderNavigation aria-label=\"Carbon Tutorial\" />\r\n          <SideNav\r\n            aria-label=\"Side navigation\"\r\n            expanded={isSideNavExpanded}\r\n            isPersistent={false}\r\n          >\r\n            <SideNavItems>\r\n              <HeaderSideNavItems>\r\n                <HeaderMenuItem href=\"/entries\">Entries</HeaderMenuItem>\r\n                <HeaderMenuItem href=\"/questions\">\r\n                  Submit a New Report\r\n                </HeaderMenuItem>\r\n              </HeaderSideNavItems>\r\n            </SideNavItems>\r\n          </SideNav>\r\n\r\n          <HeaderGlobalBar>\r\n            {user && (\r\n              <>\r\n                <HeaderGlobalAction aria-label=\"User Avatar\">\r\n                  {user.photoURL ? (\r\n                    <UserIconStyled src={user.photoURL} width=\"20\" alt=\"user\" />\r\n                  ) : (\r\n                    <UserAvatar20 />\r\n                  )}\r\n                </HeaderGlobalAction>\r\n              </>\r\n            )}\r\n          </HeaderGlobalBar>\r\n        </Header>\r\n      </>\r\n    )}\r\n  />\r\n);\r\n\r\nTutorialHeader.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default TutorialHeader;\r\n","import TutorialHeader from './TutorialHeader';\r\n\r\nexport default TutorialHeader;\r\n","import LandingPage from './LandingPage';\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { auth } from '../../firebase';\r\n\r\nconst LandingPage = () => {\r\n  const user = auth.currentUser;\r\n  console.log(user);\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <h1>Welcome to Intern Diary, {user.displayName}!</h1>\r\n      ) : (\r\n        <>\r\n          <h1>Welcome to Intern Diary!</h1>{' '}\r\n          <p>Please log in for better experience.</p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import EntriesPage from './EntriesPage';\r\n\r\nexport default EntriesPage;\r\n","import React from 'react';\r\nimport {\r\n  DataTable,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n} from 'carbon-components-react';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { db, auth } from '../../firebase';\r\n\r\nexport default function EntriesPage() {\r\n  const user = auth.currentUser;\r\n  const userEmail = user?.email != null ? user.email : '';\r\n  const admin = 'msmichova1@gmail.com';\r\n\r\n  // TODO: fix linting\r\n  const [rows] =\r\n    userEmail === admin\r\n      ? useCollectionData(db.collection('entries'), { idField: 'id' })\r\n      : useCollectionData(\r\n          db.collection('entries').where('userEmail', '==', userEmail),\r\n          { idField: 'id' }\r\n        );\r\n  console.log(rows);\r\n\r\n  const headers = [\r\n    {\r\n      key: 'answer1',\r\n      header: 'What did you work on today?',\r\n    },\r\n    {\r\n      key: 'answer2',\r\n      header: 'What are you planning to do tomorrow?',\r\n    },\r\n    {\r\n      key: 'answer3',\r\n      header: 'Have you had any issues?',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {userEmail === admin ? (\r\n        <h1>All Students' Diary Entries</h1>\r\n      ) : (\r\n        <h1>My Diary Entries</h1>\r\n      )}\r\n      <br />\r\n      {!user && <p>Please log in to view diary entries</p>}\r\n      <br />\r\n      {user && rows && (\r\n        <DataTable rows={rows} headers={headers}>\r\n          {({ rows, headers, getTableProps, getHeaderProps, getRowProps }) => (\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow {...getRowProps({ row })}>\r\n                    {row.cells.map((cell) => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </DataTable>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import QuestionsPage from './QuestionsPage';\r\n\r\nexport default QuestionsPage;\r\n","import { Button, Form, TextArea } from 'carbon-components-react';\r\nimport React, { useState } from 'react';\r\nimport { db, auth } from '../../firebase';\r\n\r\nexport default function QuestionsPage() {\r\n  const user = auth.currentUser;\r\n  const userEmail = user?.email != null ? user.email : '';\r\n\r\n  const [answer1, setAnswer1] = useState('');\r\n  const [answer2, setAnswer2] = useState('');\r\n  const [answer3, setAnswer3] = useState('');\r\n\r\n  //   const [isInvalid1, setIsInvalid1] = useState(false);\r\n  //   const [isInvalid2, setIsInvalid2] = useState(false);\r\n  //   const [isInvalid3, setIsInvalid3] = useState(false);\r\n\r\n  //   const isValid = (answer1, answer2, answer3) => {\r\n  //     answer1 === '' ? setIsInvalid1(true) : setIsInvalid1(false);\r\n  //     answer2 === '' ? setIsInvalid2(true) : setIsInvalid2(false);\r\n  //     answer3 === '' ? setIsInvalid3(true) : setIsInvalid3(false);\r\n\r\n  //     if (!isInvalid1 || !isInvalid2 || !isInvalid3) {\r\n  //       console.log({ answer1, answer2, answer3 });\r\n  //       console.log({ isInvalid1, isInvalid2, isInvalid3 });\r\n  //       console.log('INVALID');\r\n  //       return false;\r\n  //     }\r\n  //     console.log('VALID');\r\n  //     return true;\r\n  //   };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // if (isValid(answer1, answer2, answer3)) {\r\n    db.collection('entries')\r\n      .add({\r\n        answer1,\r\n        answer2,\r\n        answer3,\r\n        userEmail,\r\n      })\r\n      .then((docRef) => {\r\n        console.log('Document written with ID: ', docRef.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding document: ', error);\r\n      });\r\n\r\n    setAnswer1('');\r\n    setAnswer2('');\r\n    setAnswer3('');\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Submit a New Diary Entry</h1>\r\n      <br />\r\n      {user ? (\r\n        <Form onSubmit={handleSubmit}>\r\n          <TextArea\r\n            labelText=\"What did you work on today?\"\r\n            placeholder=\"I worked on...\"\r\n            value={answer1}\r\n            onChange={(e) => setAnswer1(e.target.value)}\r\n            // invalid={isInvalid1}\r\n            invalidText=\"Please answer this question.\"\r\n          />\r\n          <br />\r\n          <TextArea\r\n            labelText=\"What are you planning to do tomorrow?\"\r\n            placeholder=\"I will...\"\r\n            value={answer2}\r\n            onChange={(e) => setAnswer2(e.target.value)}\r\n            // invalid={isInvalid2}\r\n            invalidText=\"Please answer this question.\"\r\n          />\r\n          <br />\r\n          <TextArea\r\n            labelText=\"Have you had any issues?\"\r\n            placeholder=\"I came across a...\"\r\n            value={answer3}\r\n            onChange={(e) => setAnswer3(e.target.value)}\r\n            // invalid={isInvalid3}\r\n            invalidText=\"Please answer this question.\"\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      ) : (\r\n        'Please log in to submit a report.'\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.scss';\r\nimport { Button, Content } from 'carbon-components-react';\r\nimport withFirebaseAuth from 'react-with-firebase-auth';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport styledComponents from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { auth } from './firebase';\r\nimport TutorialHeader from './components/TutorialHeader';\r\nimport LandingPage from './content/LandingPage';\r\nimport EntriesPage from './content/EntriesPage';\r\nimport QuestionsPage from './content/QuestionsPage';\r\n\r\nconst StyledFooter = styledComponents.footer`\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst firebaseAppAuth = auth;\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n  microsoftProvider: new firebase.auth.OAuthProvider('microsoft.com'),\r\n};\r\n\r\nconst micosoftLogin = () => {\r\n  firebaseAppAuth\r\n    .signInWithPopup(providers.microsoftProvider)\r\n    .then((result) => {\r\n      // IdP data available in result.additionalUserInfo.profile.\r\n      /** @type {firebase.auth.OAuthCredential} */\r\n      const { credential } = result;\r\n\r\n      // OAuth access and id tokens can also be retrieved:\r\n      const { accessToken } = credential;\r\n      const { idToken } = credential;\r\n    })\r\n    .catch((error) => {\r\n      // Handle error.\r\n    });\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { user, signOut, signInWithGoogle, signInWithPopup } = this.props;\r\n    return (\r\n      <>\r\n        <TutorialHeader user={user} />\r\n        <Content>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LandingPage} />\r\n            <Route path=\"/questions\" component={QuestionsPage} />\r\n            <Route path=\"/entries\" component={EntriesPage} />\r\n          </Switch>\r\n        </Content>\r\n        <StyledFooter>\r\n          {user ? (\r\n            <Button type=\"button\" onClick={signOut}>\r\n              Sign out\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button type=\"button\" onClick={signInWithGoogle}>\r\n                Sign in with Google\r\n              </Button>\r\n              <Button type=\"button\" kind=\"tertiary\" onClick={micosoftLogin}>\r\n                Sign in with Microsoft\r\n              </Button>\r\n            </>\r\n          )}\r\n        </StyledFooter>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth,\r\n})(App);\r\n\r\nApp.propTypes = {\r\n  user: PropTypes.object,\r\n  signOut: PropTypes.func,\r\n  signInWithGoogle: PropTypes.func,\r\n  signInWithPopup: PropTypes.func,\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}